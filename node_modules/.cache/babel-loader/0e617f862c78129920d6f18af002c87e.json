{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport question from \"./question.vue\";\nexport default {\n  components: {\n    question: question\n  },\n  data: function data() {\n    return {\n      gameStatus: 'uninitialized',\n      gameId: -1,\n      answerVals: ['Yes', 'No', 'Not Sure'],\n      answerVal: '',\n      message: '',\n      question: {}\n    };\n  },\n  computed: {\n    formTitle: function formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    }\n  },\n  created: function created() {\n    this.initialize();\n  },\n  watch: {\n    answerVal: function answerVal(newVal) {\n      if (newVal) {\n        this.processAnswer();\n        this.answerVal = null;\n      }\n    }\n  },\n  methods: {\n    initialize: function initialize() {\n      var _this = this;\n\n      axios.post(\"/guess_subject/games\", {\n        game_type: \"Bible Characters\"\n      }).then(function (response) {\n        var data = response.data.data;\n        _this.gameId = data.game_id;\n        _this.question = data.next_question;\n        console.log(data);\n      })[\"catch\"](function (e) {\n        console.log(e);\n      });\n    },\n    processAnswer: function processAnswer() {\n      var _this2 = this;\n\n      axios.post(\"/guess_subject/games/\".concat(this.game_id, \"/process_answer\"), {\n        question_id: this.question.question_id,\n        answer_val: this.answerVal\n      }).then(function (response) {\n        var data = response.data.data;\n        _this2.message = data.message;\n        _this2.next_question = data.next_question;\n      });\n    },\n    editItem: function editItem(item) {\n      this.editedIndex = item.id;\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n    deleteItem: function deleteItem(item) {\n      var _this3 = this;\n\n      var index = this.desserts.indexOf(item);\n      confirm(\"Are you sure you want to delete this item?\");\n      axios[\"delete\"](\"http://localhost:3000/users/\".concat(item.id)).then(function (response) {\n        console.log(response);\n        console.log(response.data.json);\n        alert(response.data.json);\n\n        _this3.initialize();\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n      this.desserts.splice(index, 1);\n    },\n    close: function close() {\n      var _this4 = this;\n\n      this.dialog = false;\n      setTimeout(function () {\n        _this4.editedItem = Object.assign({}, _this4.defaultItem);\n        _this4.editedIndex = -1;\n      }, 300);\n    },\n    save: function save(item) {\n      var _this5 = this;\n\n      if (this.editedIndex > -1) {\n        axios.put(\"http://localhost:3000/users/\".concat(item.id), {\n          id: this.editedItem.id,\n          first_name: this.editedItem.first_name,\n          last_name: this.editedItem.last_name,\n          email: this.editedItem.email,\n          phone: this.editedItem.phone,\n          address: this.editedItem.address\n        }).then(function (response) {\n          console.log(response);\n\n          _this5.initialize();\n        })[\"catch\"](function (error) {\n          console.log(error);\n        });\n      } else {\n        console.log(item);\n        axios.post(\"http://localhost:3000/users/\", {\n          user: this.editedItem\n        }).then(function (response) {\n          console.log(response);\n          console.log(\"Created!\");\n\n          _this5.initialize();\n        })[\"catch\"](function (error) {\n          console.log(error);\n        });\n        this.desserts.push(this.editedItem);\n      }\n\n      this.close();\n    },\n    getUser: function getUser(item) {\n      var _this6 = this;\n\n      axios.get(\"http://localhost:3000/\".concat(item.id)).then(function (response) {\n        _this6.dessert = response.data;\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AAEA;AACAA;AAAAC;AAAA,GADA;AAEAC;AAAA;AACAC,iCADA;AAEAC,gBAFA;AAGAC,2CAHA;AAIAC,mBAJA;AAKAC,iBALA;AAMAN;AANA;AAAA,GAFA;AAUAO;AACAC,aADA,uBACA;AACA;AACA;AAHA,GAVA;AAeAC,SAfA,qBAeA;AACA;AACA,GAjBA;AAkBAC;AACAL,aADA,qBACAM,MADA,EACA;AACA;AACA;AACA;AACA;AACA;AANA,GAlBA;AA0BAC;AACAC,cADA,wBACA;AAAA;;AACAC,YACAC,IADA,CACA,sBADA,EAEA;AACAC;AADA,OAFA,EAKAC,IALA,CAKA;AACA;AACA;AACA;AACAC;AACA,OAVA,WAWA;AACAA;AACA,OAbA;AAcA,KAhBA;AAiBAC,iBAjBA,2BAiBA;AAAA;;AACAL,YACAC,IADA,gCACA,YADA,sBAEA;AACAK,8CADA;AAEAC;AAFA,OAFA,EAKAJ,IALA,CAKA;AACA;AACA;AACA;AACA,OATA;AAUA,KA5BA;AA6BAK,YA7BA,oBA6BAC,IA7BA,EA6BA;AACA;AACA;AACA;AACA,KAjCA;AAkCAC,cAlCA,sBAkCAD,IAlCA,EAkCA;AAAA;;AACA;AACAE;AACAX,4DACAS,OADA,GAEAN,IAFA,CAEA;AACAC;AACAA;AACAQ;;AACA;AACA,OAPA,WAQA;AACAR;AACA,OAVA;AAWA;AACA,KAjDA;AAkDAS,SAlDA,mBAkDA;AAAA;;AACA;AACAC;AACA;AACA;AACA,OAHA,EAGA,GAHA;AAIA,KAxDA;AAyDAC,QAzDA,gBAyDAN,IAzDA,EAyDA;AAAA;;AACA;AACAT,cACAgB,GADA,uCACAP,OADA,GACA;AACAQ,gCADA;AAEAC,gDAFA;AAGAC,8CAHA;AAIAC,sCAJA;AAKAC,sCALA;AAMAC;AANA,SADA,EASAnB,IATA,CASA;AACAC;;AACA;AACA,SAZA,WAaA;AACAA;AACA,SAfA;AAgBA,OAjBA,MAiBA;AACAA;AACAJ,cACAC,IADA,iCACA;AACAsB;AADA,SADA,EAIApB,IAJA,CAIA;AACAC;AACAA;;AACA;AACA,SARA,WASA;AACAA;AACA,SAXA;AAYA;AACA;;AACA;AACA,KA5FA;AA6FAoB,WA7FA,mBA6FAf,IA7FA,EA6FA;AAAA;;AACAT,YACAyB,GADA,iCACAhB,OADA,GAEAN,IAFA,CAEA;AACA;AACA,OAJA,WAKA;AACAC;AACA,OAPA;AAQA;AAtGA;AA1BA","names":["components","question","data","gameStatus","gameId","answerVals","answerVal","message","computed","formTitle","created","watch","newVal","methods","initialize","axios","post","game_type","then","console","processAnswer","question_id","answer_val","editItem","item","deleteItem","confirm","alert","close","setTimeout","save","put","id","first_name","last_name","email","phone","address","user","getUser","get"],"sourceRoot":"app/javascript/packs/components","sources":["guess-subject.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>\n        Guess Subjects\n    </h3>\n    <div>\n      {{ question ? `${question.question}?` : ''}}\n    </div>\n    <div>\n      <v-container class=\"px-0\" fluid>\n        <v-radio-group v-model=\"answerVal\">\n        <v-radio\n          v-for=\"(answer, index) in answerVals\"\n          :key=\"index+1\"\n          :label=\"answer\"\n          :value=\"index+1\"\n        ></v-radio>\n        </v-radio-group>\n      </v-container>\n    </div>\n    <div>\n      {{ message }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport question from \"./question.vue\";\n\nexport default {\n  components: { question },\n  data: () => ({\n    gameStatus: 'uninitialized',\n    gameId: -1,\n    answerVals: ['Yes', 'No', 'Not Sure'],\n    answerVal: '',\n    message: '',\n    question: {}\n  }),\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    }\n  },\n  created() {\n    this.initialize();\n  },\n  watch: {\n    answerVal(newVal) {\n      if(newVal){\n        this.processAnswer();\n        this.answerVal = null;\n      }\n    }\n  },\n  methods: {\n    initialize() {\n      axios\n        .post(\"/guess_subject/games\", \n        {\n          game_type: \"Bible Characters\"\n        })\n        .then(response => {\n          const data = response.data.data;\n          this.gameId = data.game_id;\n          this.question = data.next_question;\n          console.log(data);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    processAnswer() {\n      axios\n        .post(`/guess_subject/games/${this.game_id}/process_answer`,\n        {\n          question_id: this.question.question_id,\n          answer_val: this.answerVal\n        }).then(response => {\n          const data = response.data.data;\n          this.message = data.message;\n          this.next_question = data.next_question;\n        });\n    },\n    editItem(item) {\n      this.editedIndex = item.id;\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n    deleteItem(item) {\n      const index = this.desserts.indexOf(item);\n      confirm(\"Are you sure you want to delete this item?\");\n      axios\n        .delete(`http://localhost:3000/users/${item.id}`)\n        .then(response => {\n          console.log(response);\n          console.log(response.data.json);\n          alert(response.data.json);\n          this.initialize();\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      this.desserts.splice(index, 1);\n    },\n    close() {\n      this.dialog = false;\n      setTimeout(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      }, 300);\n    },\n    save(item) {\n      if (this.editedIndex > -1) {\n        axios\n          .put(`http://localhost:3000/users/${item.id}`, {\n            id: this.editedItem.id,\n            first_name: this.editedItem.first_name,\n            last_name: this.editedItem.last_name,\n            email: this.editedItem.email,\n            phone: this.editedItem.phone,\n            address: this.editedItem.address\n          })\n          .then(response => {\n            console.log(response);\n            this.initialize();\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      } else {\n        console.log(item);\n        axios\n          .post(`http://localhost:3000/users/`, {\n            user: this.editedItem\n          })\n          .then(response => {\n            console.log(response);\n            console.log(\"Created!\");\n            this.initialize();\n          })\n          .catch(error => {\n            console.log(error);\n          });\n        this.desserts.push(this.editedItem);\n      }\n      this.close();\n    },\n    getUser(item) {\n      axios\n        .get(`http://localhost:3000/${item.id}`)\n        .then(response => {\n          this.dessert = response.data;\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n};\n  \n</script>"]},"metadata":{},"sourceType":"module"}