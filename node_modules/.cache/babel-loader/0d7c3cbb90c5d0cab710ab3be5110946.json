{"ast":null,"code":"//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      dialog: false,\n      headers: [{\n        text: \"First Name\",\n        align: \"left\",\n        sortable: false,\n        value: \"first_name\"\n      }, {\n        text: \"Last Name\",\n        value: \"last_name\"\n      }, {\n        text: \"Email\",\n        value: \"email\"\n      }, {\n        text: \"Phone\",\n        value: \"phone\"\n      }, {\n        text: \"Address\",\n        value: \"address\"\n      }, {\n        text: \"Actions\",\n        value: \"action\",\n        sortable: false\n      }],\n      desserts: [],\n      editedIndex: -1,\n      editedItem: {\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        phone: \"\",\n        address: \"\"\n      },\n      defaultItem: {\n        name: \"\",\n        calories: \"\",\n        fat: \"\",\n        carbs: \"\",\n        protein: \"\"\n      }\n    };\n  },\n  computed: {\n    formTitle: function formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    }\n  },\n  watch: {\n    dialog: function dialog(val) {\n      val || this.close();\n    }\n  },\n  created: function created() {\n    this.initialize();\n  },\n  methods: {\n    initialize: function initialize() {\n      var _this = this;\n\n      return axios.get(\"http://localhost:3000/users\").then(function (response) {\n        console.log(response.data);\n        _this.desserts = response.data;\n      })[\"catch\"](function (e) {\n        console.log(e);\n      });\n    },\n    editItem: function editItem(item) {\n      this.editedIndex = item.id;\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n    deleteItem: function deleteItem(item) {\n      var _this2 = this;\n\n      var index = this.desserts.indexOf(item);\n      confirm(\"Are you sure you want to delete this item?\");\n      axios[\"delete\"](\"http://localhost:3000/users/\".concat(item.id)).then(function (response) {\n        console.log(response);\n        console.log(response.data.json);\n        alert(response.data.json);\n\n        _this2.initialize();\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n      this.desserts.splice(index, 1);\n    },\n    close: function close() {\n      var _this3 = this;\n\n      this.dialog = false;\n      setTimeout(function () {\n        _this3.editedItem = Object.assign({}, _this3.defaultItem);\n        _this3.editedIndex = -1;\n      }, 300);\n    },\n    save: function save(item) {\n      var _this4 = this;\n\n      if (this.editedIndex > -1) {\n        axios.put(\"http://localhost:3000/users/\".concat(item.id), {\n          id: this.editedItem.id,\n          first_name: this.editedItem.first_name,\n          last_name: this.editedItem.last_name,\n          email: this.editedItem.email,\n          phone: this.editedItem.phone,\n          address: this.editedItem.address\n        }).then(function (response) {\n          console.log(response);\n\n          _this4.initialize();\n        })[\"catch\"](function (error) {\n          console.log(error);\n        });\n      } else {\n        console.log(item);\n        axios.post(\"http://localhost:3000/users/\", {\n          user: this.editedItem\n        }).then(function (response) {\n          console.log(response);\n          console.log(\"Created!\");\n\n          _this4.initialize();\n        })[\"catch\"](function (error) {\n          console.log(error);\n        });\n        this.desserts.push(this.editedItem);\n      }\n\n      this.close();\n    },\n    getUser: function getUser(item) {\n      var _this5 = this;\n\n      axios.get(\"http://localhost:3000/\".concat(item.id)).then(function (response) {\n        _this5.dessert = response.data;\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;AAOA;AAEA;AACAA;AAAA;AACAC,mBADA;AAEAC,gBACA;AACAC,0BADA;AAEAC,qBAFA;AAGAC,uBAHA;AAIAC;AAJA,OADA,EAOA;AAAAH;AAAAG;AAAA,OAPA,EAQA;AAAAH;AAAAG;AAAA,OARA,EASA;AAAAH;AAAAG;AAAA,OATA,EAUA;AAAAH;AAAAG;AAAA,OAVA,EAWA;AAAAH;AAAAG;AAAAD;AAAA,OAXA,CAFA;AAeAE,kBAfA;AAgBAC,qBAhBA;AAiBAC;AACAC,sBADA;AAEAC,qBAFA;AAGAC,iBAHA;AAIAC,iBAJA;AAKAC;AALA,OAjBA;AAwBAC;AACAC,gBADA;AAEAC,oBAFA;AAGAC,eAHA;AAIAC,iBAJA;AAKAC;AALA;AAxBA;AAAA,GADA;AAiCAC;AACAC,aADA,uBACA;AACA;AACA;AAHA,GAjCA;AAsCAC;AACAtB,UADA,kBACAuB,GADA,EACA;AACAA;AACA;AAHA,GAtCA;AA2CAC,SA3CA,qBA2CA;AACA;AACA,GA7CA;AA8CAC;AACAC,cADA,wBACA;AAAA;;AACA,mBACAC,GADA,CACA,6BADA,EAEAC,IAFA,CAEA;AACAC;AACA;AACA,OALA,WAMA;AACAA;AACA,OARA;AASA,KAXA;AAYAC,YAZA,oBAYAC,IAZA,EAYA;AACA;AACA;AACA;AACA,KAhBA;AAiBAC,cAjBA,sBAiBAD,IAjBA,EAiBA;AAAA;;AACA;AACAE;AACAC,4DACAH,OADA,GAEAH,IAFA,CAEA;AACAC;AACAA;AACAM;;AACA;AACA,OAPA,WAQA;AACAN;AACA,OAVA;AAWA;AACA,KAhCA;AAiCAO,SAjCA,mBAiCA;AAAA;;AACA;AACAC;AACA;AACA;AACA,OAHA,EAGA,GAHA;AAIA,KAvCA;AAwCAC,QAxCA,gBAwCAP,IAxCA,EAwCA;AAAA;;AACA;AACAG,cACAK,GADA,uCACAR,OADA,GACA;AACAS,gCADA;AAEA/B,gDAFA;AAGAC,8CAHA;AAIAC,sCAJA;AAKAC,sCALA;AAMAC;AANA,SADA,EASAe,IATA,CASA;AACAC;;AACA;AACA,SAZA,WAaA;AACAA;AACA,SAfA;AAgBA,OAjBA,MAiBA;AACAA;AACAK,cACAO,IADA,iCACA;AACAC;AADA,SADA,EAIAd,IAJA,CAIA;AACAC;AACAA;;AACA;AACA,SARA,WASA;AACAA;AACA,SAXA;AAYA;AACA;;AACA;AACA,KA3EA;AA4EAc,WA5EA,mBA4EAZ,IA5EA,EA4EA;AAAA;;AACAG,YACAP,GADA,iCACAI,OADA,GAEAH,IAFA,CAEA;AACA;AACA,OAJA,WAKA;AACAC;AACA,OAPA;AAQA;AArFA;AA9CA","names":["data","dialog","headers","text","align","sortable","value","desserts","editedIndex","editedItem","first_name","last_name","email","phone","address","defaultItem","name","calories","fat","carbs","protein","computed","formTitle","watch","val","created","methods","initialize","get","then","console","editItem","item","deleteItem","confirm","axios","alert","close","setTimeout","save","put","id","post","user","getUser"],"sourceRoot":"app/javascript/packs/components","sources":["guess-subject.vue"],"sourcesContent":["<template>\n    <p>\n        Guess Subject\n    </p>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data: () => ({\n    dialog: false,\n    headers: [\n      {\n        text: \"First Name\",\n        align: \"left\",\n        sortable: false,\n        value: \"first_name\"\n      },\n      { text: \"Last Name\", value: \"last_name\" },\n      { text: \"Email\", value: \"email\" },\n      { text: \"Phone\", value: \"phone\" },\n      { text: \"Address\", value: \"address\" },\n      { text: \"Actions\", value: \"action\", sortable: false }\n    ],\n    desserts: [],\n    editedIndex: -1,\n    editedItem: {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      phone: \"\",\n      address: \"\"\n    },\n    defaultItem: {\n      name: \"\",\n      calories: \"\",\n      fat: \"\",\n      carbs: \"\",\n      protein: \"\"\n    }\n  }),\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    }\n  },\n  watch: {\n    dialog(val) {\n      val || this.close();\n    }\n  },\n  created() {\n    this.initialize();\n  },\n  methods: {\n    initialize() {\n      return axios\n        .get(\"http://localhost:3000/users\")\n        .then(response => {\n          console.log(response.data);\n          this.desserts = response.data;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    editItem(item) {\n      this.editedIndex = item.id;\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n    deleteItem(item) {\n      const index = this.desserts.indexOf(item);\n      confirm(\"Are you sure you want to delete this item?\");\n      axios\n        .delete(`http://localhost:3000/users/${item.id}`)\n        .then(response => {\n          console.log(response);\n          console.log(response.data.json);\n          alert(response.data.json);\n          this.initialize();\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      this.desserts.splice(index, 1);\n    },\n    close() {\n      this.dialog = false;\n      setTimeout(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      }, 300);\n    },\n    save(item) {\n      if (this.editedIndex > -1) {\n        axios\n          .put(`http://localhost:3000/users/${item.id}`, {\n            id: this.editedItem.id,\n            first_name: this.editedItem.first_name,\n            last_name: this.editedItem.last_name,\n            email: this.editedItem.email,\n            phone: this.editedItem.phone,\n            address: this.editedItem.address\n          })\n          .then(response => {\n            console.log(response);\n            this.initialize();\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      } else {\n        console.log(item);\n        axios\n          .post(`http://localhost:3000/users/`, {\n            user: this.editedItem\n          })\n          .then(response => {\n            console.log(response);\n            console.log(\"Created!\");\n            this.initialize();\n          })\n          .catch(error => {\n            console.log(error);\n          });\n        this.desserts.push(this.editedItem);\n      }\n      this.close();\n    },\n    getUser(item) {\n      axios\n        .get(`http://localhost:3000/${item.id}`)\n        .then(response => {\n          this.dessert = response.data;\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n};\n  \n</script>"]},"metadata":{},"sourceType":"module"}